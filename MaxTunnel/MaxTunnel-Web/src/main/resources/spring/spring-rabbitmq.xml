<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/rabbit
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd">
    <!--配置connection-factory，指定连接rabbit server参数 -->
    <rabbit:connection-factory id="connectionFactory" username="${mq.username}" password="${mq.password}"
                               host="${mq.host}" port="${mq.port}"/>

    <!--定义rabbit template用于数据的接收和发送 -->
    <!-- mandatory必须设置true,return callback才生效 -->
    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
                     confirm-callback="confirmCallBackListener"
                     return-callback="returnCallBackListener"
                     mandatory="true"
                     exchange="${mq.exchange}"/>

    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!--定义queue -->
    <rabbit:queue name="QUEUE_ALARM_UM"/>
    <rabbit:queue name="QUEUE_ALARM_VM"/>
    <rabbit:queue name="QUEUE_PLAN_UM"/>
    <rabbit:queue name="QUEUE_PLAN_VM"/>

    <!-- 定义topic exchange，绑定队列 -->
    <rabbit:topic-exchange name="${mq.exchange}" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="QUEUE_ALARM_UM" pattern="alarm.um"/>
            <rabbit:binding queue="QUEUE_ALARM_VM" pattern="alarm.vm"/>
            <rabbit:binding queue="QUEUE_PLAN_UM" pattern="plan.um"/>
            <rabbit:binding queue="QUEUE_PLAN_VM" pattern="plan.vm"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!-- 消息接收者 -->
    <bean id="AlarmConsumer" class="com.bandweaver.tunnel.service.mam.alarm.AlarmConsumer"/>
    <bean id="DataConsumer" class="com.bandweaver.tunnel.service.mam.data.DataConsumer"/>
    <bean id="firePlanConsumer" class="com.bandweaver.tunnel.service.em.fireplan.FirePlanConsumer"/>

    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container acknowledge="manual" connection-factory="connectionFactory">
        <!-- 关闭后台消费者，由前端消费 -->
        <!-- <rabbit:listener queues="QUEUE_ALARM_UM" ref="AlarmConsumer"/>-->
        <!--   <rabbit:listener queues="QUEUE_PLAN_UM" ref="firePlanConsumer" /> -->
    </rabbit:listener-container>

</beans>