<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- 1.开启SpringMVC注解模式 -->
	<!-- 简化配置： (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 -->
	<mvc:annotation-driven />

	<!-- 通知spring使用cglib而不是jdk的来生成代理方法，这样 AOP可以拦截到Controller -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 配置SpringMVC -->
	<!-- 0.扫描web相关的bean -->
	<context:component-scan
		base-package="com.bandweaver.tunnel.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<!-- 排除service层的扫描 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 日志通知 -->
	<bean id="logAspect"
		class="com.bandweaver.tunnel.common.platform.log.LogAspect" />

	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/html/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>


	<!-- 2.静态资源默认servlet配置 (1)加入对静态资源的处理：js,gif,png (2)允许使用"/"做整体映射 -->
	<mvc:default-servlet-handler />
	<mvc:resources mapping="/html/**"
		location="/WEB-INF/html/" />

	<!-- 3.配置jsp 显示ViewResolver -->
	<!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
	<!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" 
		/> -->
	<!--<property name="prefix" value="/WEB-INF/jsp/" /> -->
	<!--<property name="suffix" value=".jsp" /> -->
	<!--</bean> -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.freemarker.FreeMarkerView
			</value>
		</property>
		<property name="cache">
			<value>true</value>
		</property>
		<!--这里需要注意一下，我注释了下面这样一行代码，这行代码的意思就是指引freemarker需要解析的文件的位置。注释掉原因是因为 applicationContext.xml里有这样一行代码：<property 
			name="templateLoaderPath" value="/WEB-INF/views/" /> 已经指定了视图位置。如果我们这里依然保留下方代码，页面回报406的找不到的错误 -->
		<!--<property name="prefix"><value>/WEB-INF/html/</value></property>-->
		<property name="suffix">
			<value>.html</value>
		</property>
		<property name="contentType">
			<value>text/html; charset=UTF-8</value>
		</property>
	</bean>

	<!-- 文件上传控制 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maxUploadSize单位是字节 :30M -->
		<property name="maxUploadSize" value="31457280"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>


</beans>